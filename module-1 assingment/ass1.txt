1.Overview of it industry?..

What is program?..
theory exercise...

1.....Explain in your own words what a program is and how it functions. 
---> program is instructions for a computer to execute specific tasks.it is the set of instruction to convert the code into machine code
 function is block of organised and resuable code ...

lab exercise....

1...Write a simple "Hello World" program in two different programming languages of your choice. Compare the structure and syntax. 
--->     c lan                                                                        
#include <stdio.h>
#include<conio.h>
int main()
{
    printf("Hello World");

    return 0;
}           
==========================
 ---> c++ lan                                                                           		
  #include <iostream>
  using namespace std;
  int main()
 {
  	cout<<"hello world";
	return 0;
 }
=================================================================

2.....what is programming?..
-->Programming is the process of creating a set of instructions, or code, 
that a computer can execute to perform specific tasks or solve problems.

---> What are the key steps involved in the programming process? 
step1..program diffination
step2..program analysis
step3..algorithm development
step4..coding and documentation
step5..testing and debugging
step6..maintaince
========================================================================================================
3.....Types of Programming Languages?.. 
-->1.  Procedural Programming
Ex : C Language

2.Object Oriented Programming
Ex: C++

3.Logical Programming
Ex: Prolog Language

4.Functional Programming
Ex: Python

---> What are the main differences between high-level and low-level programming languages? 

high-level languages                                                   low-level languages

human-readable and easier         1.easy to understand for                       to understand also use for human.   manchince but less  readable.

2.portable 	             2.non-portable

3.lower execution speed       3.higer execution speed                                       

4.use syntax and semantics    4.binary code and mnemonics                                

ex..java ,python,c++.      assembly languages,manchine               					languages...
                                     

=================================================================
4.....World Wide Web & How Internet Works 

...world wide web stands for www...that's collections of sites...
....The Internet works by connecting networks through routers and switches, 
enabling devices to communicate and access content on remote servers...

lab .... Research and create a diagram of how data is transmitted from a client to a server over the internet. 
...clients-->internet--->server


-----> Describe the roles of the client and server in web communication. 
..>>Client:
..Initiates communication by sending requests to the server. 
  >These requests can be for data retrieval, updates, or to perform specific tasks. 
  >Often responds to user actions or inputs, such as clicking a link or submitting a form. 
  >Presents the information received from the server to the user.
  >Examples of clients include web browsers, mobile apps, and other software that interacts with web services.

..>>server:
..Receives and processes requests from clients. 
 >Manages and delivers resources and services, such as web pages, databases, and applications. 
 >Ensures reliable data exchange and handles multiple client requests simultaneously. 
 >Responds to client requests by sending back the requested information or acknowledgment. 
 >Examples of servers include web servers, application servers, and database servers.  
=================================================================

5.....Network Layers on Client and Server ?..
..>>there are 3 types of networks...
1.presentation layer..    user interface that clients 
2.application layer..     it is a logical layer and its manages the interations between presentation and data layer...
3.data layer...      this layer is responsible for data storage and its manage by server..

.Design a simple HTTP client-server communication in any language. 
-->clients-->internet-->server..


>>>Explain the function of the TCP/IP model and its layers?..
--->The TCP/IP model is a framework that defines how data is transmitted across computer networks, including the Internet. 
It's a set of protocols, like a set of rules, that ensure communication between devices. 
The model divides the communication process into four layers: Application, Transport, Internet, and Network Access.

--->there are 4 types of tcp/ip..
1.application layer:
..The application layer is the group of applications that let the user access the network. 
For most of us that means email, messaging apps.

2.transport layer:
..the transport layer provides a reliable data connection between two communicating devices.
 Itâ€™s like sending an insured package.

3.network layer:
..the network access layer, also known as the data link layer, handles the physical infrastructure that 
lets computers communicate with one another over the internet.

4.internet layer:
The internet layer, also known as the network layer, controls the flow and routing of traffic to ensure data 
is sent speedily and accurately. 
This layer is also responsible for reassembling the data packet at its destination.

=================================================================
6...Client and Servers :
--->Explain Client Server Communication?
..>>Client-server communication is a model where a client 
    ->like a web browser or mobile app, requests services or data from a server ->like a web server or database, 
      and the server processes the request and responds back to the client. 

=================================================================
7..Types of Internet Connections 
 --->Research different types of internet connections (e.g., broadband, fiber, satellite) and list their pros and cons. 
...>>There are several types of internet connections, including:
        broadband,dial-up, DSL, cable, fiber, satellite, 5G, and fixed wireless.
1.broadband:
pros::global connection,E-commerce,ease of online education,abundunt information...
cons::loss of personal data,fake information,distraction and time wastage,healths concers...

2.fibre:
pros::low power,flexible,less long term expenses,carry lots of data...
cons::high cost at first,difficult to splice,can't carry power to operate other devices..

---> How does broadband differ from fiber-optic internet? 
...Broadband is a general term for high-speed internet access using various technologies like DSL, cable, and satellite. Fiber-optic internet, on the other hand, is a specific type of broadband that utilizes light transmitted through thin glass or plastic fibers, offering faster and more reliable speeds compared to traditional broadband. 
Here's a more detailed breakdown:

1. Technology:
Broadband:
      Refers to any high-speed internet connection, including technologies like:
     ..DSL (Digital Subscriber Line): Uses existing phone lines for internet access. 
     ..Cable: Uses existing TV cable infrastructure for internet access. 
     ..Satellite: Uses satellite technology to provide internet access in remote areas. 
     ..Fiber-optic:
    Specifically uses light pulses transmitted through fiber optic cables to carry data.
 
2. Speed and Reliability:
Broadband:
     ..Speeds can vary depending on the technology used. For example, DSL may be slower than cable, and both may be slower and less reliable than fiber optic. 
Fiber-optic:
    ..Generally offers faster and more reliable speeds, with less latency and interference compared to traditional broadband methods. 

3. Infrastructure:
Broadband:
     ..Can utilize existing infrastructure like phone lines, TV cables, or satellite technology. 
 Fiber-optic:
    ..Requires a dedicated fiber optic cable network to be installed, which can be more expensive and time-consuming to implement. 

4. Advantages:
     ..Fiber-optic:
     ..Offers superior speed, reliability, and lower latency, making it ideal for demanding applications like streaming, gaming, and online video conferencing.
Broadband:
     ..Can be more affordable and readily available in some areas, making it a viable option for users with lower speed requirements. 
   ..In essence: Broadband is a broader term for high-speed internet, while fiber-optic is a specific technology within that category that offers superior performance. 
=================================================================
8..Protocols Simulate HTTP and FTP requests using command line tools (e.g., curl). 

--->




What are the differences between HTTP and HTTPS protocols? 
---> 1.http   2.https...                                                                                       1.function at the appliction layer                                        1.this is runs at the transport layer.
                       
2.  lacks security.                                                                      2.to protect the communication between server and client.        

3.operates by default on port 80.                                        3.operates by default on port 443.

4.data exchanged in the plain text,                                     4. data exchanged in the chiper,                                      
and it's not encrypted brfore ending.                                     or encrypted text.

========================================================================================================
9.Application Security :
-->Identify and explain three common application security vulnerabilities. Suggest possible solutions. 

..>Three common application security vulnerabilities are Broken Authentication, Cross-Site Scripting (XSS), and SQL Injection.

    Broken Authentication allows attackers to bypass login mechanisms, XSS enables them to inject malicious scripts into web pages, and SQL Injection allows manipulation of database queries.
 
    Solutions include implementing multi-factor         authentication,using output encoding and input validation to prevent XSS, and using parameterized queries to protect against SQL Injection. 

-->What is the role of encryption in securing applications? 

  Encryption plays a crucial role in securing applications by transforming sensitive data into an unreadable format, preventing unauthorized access, and ensuring data confidentiality, integrity, and authentication.
Data Protection:
Encryption ensures that even if data is intercepted or stolen, it remains unreadable without the decryption key. This protection extends to data stored on devices, within databases, and during transmission over networks. 
Confidentiality, Integrity, and Authentication:
Encryption helps maintain the confidentiality of data by making it inaccessible to unauthorized parties. It also ensures data integrity by verifying that the data has not been tampered with during transmission or storage. Furthermore, it can be used for authentication, confirming the identity of the sender or receiver. 
Application Security:
Encryption is a key component of application security, protecting data handled by applications from various threats. It can be implemented at different layers of an application, including the application layer, disk layer, and database layer. 
Regulatory Compliance:
Encryption is often required by regulatory frameworks like PCI DSS and GDPR to protect sensitive data.
=================================================================


 10.Software Applications and Its Types:

--> Identify and classify 5 applications you use daily as either system software or application software.

Here are 5 commonly used daily applications, classified as either system or application software:

1. Operating System (e.g., Windows, macOS):
    This is system software, as it manages the computer's   	hardware and provides a platform for other software to run. 

2. Web Browser (e.g., Chrome, Firefox):
     This is application software, as it allows users to access 	and interact with the internet and websites. 

3. Word Processor (e.g., Microsoft Word, Google Docs):
    This is application software, used for creating and editing 	text-based documents. 

4. Email Client (e.g., Outlook, Gmail):
     This is application software, designed for managing and  	sending emails.
 
5. Antivirus Software (e.g., Norton, McAfee):
   	This is application software, designed to protect a computer 	from malware and viruses. 


-->what is the difference between system software and application software? 

system software::direct control and access to computer harsdware.
application software::runs under system software.
 
system software::helps tom perform overall operations.
application software::make to do specific task.

system software::it is software design to provide a platform for other software.
application software::it is program or group of program designed for end users.

system software::ex:linux
application software::facebook,google..etc.
=================================================================

11...Software Architecture:
Design a basic three-tier software architecture diagram for          a web application.
 
	-->client--->server-->databse...


 What is the significance of modularity in software architecture? 
	
-->  Modularity in software architecture is crucial for building      maintainable, reusable, and scalable systems.

 It involves breaking down a complex system into smaller, independent modules, each with a specific purpose. 

This approach offers several benefits, including improved code organization, easier collaboration, reduced complexity, and enhanced adaptability to changing requirements.

  there are so many benfits of software architecture::
Benefits of Modularity:

Improved Code Organization:
      Modules encapsulate specific functionalities, making the        codebase easier to understand, navigate, and maintain. 
Enhanced Collaboration:
Different modules can be developed and maintained by different teams concurrently, reducing conflicts and increasing development efficiency. 
Reduced Complexity:
      By breaking down a large system into smaller, manageable parts, modularity simplifies the development and maintenance process. 

=================================================================
12.. Layers in Software Architecture:
 
 Create a case study on the functionality of the presentation, business logic, and data access layers of a given software system.
    
-->presentation layer-->business logic layer-->data access layer


Why are layers important in software architecture? 

	
  -->  Layers are crucial in software architecture because they     promote modularity, separation of concerns, and scalability.
	
	-->there are so many benefits of layer::

	1. Modularity and Separation of Concerns:

Each layer handles a specific aspect of the application's functionality, making it easier to understand, develop, and maintain individual components. 
    

This modularity reduces dependencies between layers,  allowing changes in one layer to have minimal impact on others. 


	2. Scalability and Adaptability: 

Layers can be scaled independently to meet specific performance needs.


Different technologies can be used in different layers without affecting the overall architecture.

=================================================================

13.. Software Environments:

Explore different types of software environments (development, testing, production). Set up a basic environment in a virtual machine.

-->  Software environments can be broadly categorized into     development, testing, and production, each serving a distinct purpose in the software development lifecycle. Development environments are used for coding, testing environments for quality assurance, and production environments for live deployments. Setting up a basic environment in a virtual machine involves configuring a virtual operating system and necessary software tools. 

-->Different Types of Software Environments:

Development Environment:
     This is where developers create, modify, and test the software. It's a sandbox where they can experiment and build without affecting other systems. 

Testing Environment:
        This environment is used by quality assurance (QA) teams to  ensure the software meets quality standards. It includes various testing phases like unit testing, integration testing, and user acceptance testing (UAT). 

Production Environment:
        This is the live environment where end-users access the software. It's the environment where the software is deployed and used by the public. 


-->Setting up a Basic Environment in a Virtual Machine:

1. Install Virtualization Software:
   Choose a virtualization software like VirtualBox or VMware. 

2. Create a Virtual Machine:
   Use the software to create a new virtual machine and configure its resources (memory, storage). 

3. Install an Operating System:
   Install a desired operating system like Linux or Windows within the virtual machine. 

4. Install Software Tools:
Install necessary software tools like IDEs, version control systems (Git), and databases for development, testing, and deployment.
 
5. Configure the Environment:
   Configure the environment to match the specific requirements of the software project. 


 Explain the importance of a development environment in software production.


-->A development environment is crucial in software production as it provides a controlled space for developers to write, test, and debug code without impacting live users or the final product.

-->there are five important of development environment::

1. Controlled Environment for Experimentation and Testing:

 Developers can make changes and test new features or updates without affecting end-users.

This allows for a safer testing environment where errors can be identified and resolved without impacting production.

2. Enhanced Developer Productivity and Collaboration:

A well-defined development environment streamlines the development process, making it more efficient. 


It can include tools like integrated development environments (IDEs) that provide code editors, debugging tools, and other essential features. 

3. Improved Software Quality and Stability:

By testing code in a development environment, developers can identify and resolve bugs and issues before the code is deployed to production. 

This reduces the risk of errors and instability in the final product, leading to a more stable and reliable application. 


4. Facilitates Agile and Continuous Delivery:

  Development environments are often used in conjunction with continuous integration and continuous delivery (CI/CD) pipelines. 


This allows for frequent and automated code deployments, enabling faster development cycles and quicker release of new features. 

5. Cost and Time Savings:
By catching errors early in the development process, the development environment can significantly reduce the cost and time associated with bug fixing and maintenance in production.


This allows development teams to focus on building new features and improving the software, rather than addressing production issues. 
 

=================================================================

14.. Source Code:

 Write and upload your first source code file to Github. 

	--><#include<stdio.h>
	   <#include<conio.h>
	   void main()
	   {
			printf("hello world");
	   }
	   getch();	

--> What is the difference between source code and machine code? 


	-->Source Code: 
Human-readable: Written in languages like Python, Java, C++, or C#, understandable by programmers.

High-level: Uses abstractions and syntax that programmers find intuitive.

Not directly executable: Requires translation into machine code.

Example: print("Hello, world!") in Python. 


-->Machine Code:
Machine-readable: A series of binary digits (0s and 1s) representing instructions.


Low-level: Closest to the hardware, understood directly by the CPU.

Executable: Directly processed by the computer's processor.

Example: A sequence like 01101001 00000000 00000011.


=================================================================


15.. Github and Introductions:
--> Create a Github repository and document how to commit and push code changes. 

github-->rutvi19 and in github desktop-->select the file which want to commit-->commit the file and click on push origin and last see the file on github 


--> Why is version control important in software development? 

Version control is crucial in software development because it enables tracking changes, facilitating collaboration, and allowing for easy rollback in case of errors.


It essentially provides a system for managing different versions of code, ensuring that projects can evolve efficiently and safely. 

-->the given below is how it's important ::

Collaboration:
      -->Version control systems allow multiple developers to work on the same project concurrently, minimizing conflicts and facilitating seamless integration of code changes. 

Change Tracking:
 -->It provides a detailed history of all modifications made to the codebase, allowing developers to understand the evolution of the project and identify the source of errors or bugs. 

Branching and Merging:
   -->Version control systems enable the creation of branches for experimental features or bug fixes, which can then be merged back into the main codebase once they are ready.
 
Rollback and Recovery:
      -->If an error or bug is introduced, developers can easily revert to a previous version of the code, minimizing the impact on the project. 

Code Stability and Integrity:
      -->Version control helps maintain the integrity of the codebase by preventing unintended errors and ensuring that code changes are tracked and controlled.  

so this is very important....

=================================================================

16.. Student Account in Github:

--> Create a student account on Github and collaborate on a small project with a classmate. 





-->What are the benefits of using Github for students?                                                                


GitHub provides numerous benefits for students, especially in the fields of software development and programming.
 
It offers a platform for collaboration, version control, and showcasing projects, making it a valuable tool for learning and career development.

-->benefits for student::

Version Control and Collaboration:
	-->GitHub facilitates teamwork and collaboration by allowing students to track changes, merge code, and work together on projects.
 
Portfolio Building:
-->Students can create a professional portfolio by showcasing their projects and code on GitHub, demonstrating their skills to potential employers. 

Access to Resources:
    -->The GitHub Student Developer Pack provides access to a range of free or discounted resources, including developer tools, cloud hosting, and educational content. 

Learning and Practice:
 -->GitHub encourages learning and practical experience by providing access to numerous public repositories and the opportunity to work on real-world projects. 


=============================================================

17.. Types of Software:
 Create a list of software you use regularly and classify them into the following categories: system, application, and utility software.





 
What are the differences between open-source and proprietary software?

         --> open-source software::

source code 100% public.
it is free to use.
full transparent.
many contributors develops a product.
no-vendor in.
strives for compatibility. 


-->proprietary software::

source code is private.
requires paid license to be used.		
less transparent.
a dedicated team develops the product.
vendor lock in.
lack of compatibility between software.

=================================================================

18.. GIT and GITHUB Training:

-->Follow a GIT tutorial to practice cloning, branching, and merging repositories.





How does GIT improve collaboration in a software development team? 
 

